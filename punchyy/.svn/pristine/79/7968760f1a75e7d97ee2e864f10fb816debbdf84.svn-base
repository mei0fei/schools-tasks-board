package com.etc.punchyy.gui;

import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.EventQueue;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.FocusEvent;
import java.awt.event.FocusListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;
import javax.swing.border.EmptyBorder;

import com.etc.punchyy.biz.UserBiz;
import com.etc.punchyy.bizimpl.UserBizImpl;
import com.etc.punchyy.entity.User;

public class NewPwd extends JFrame {

	private JPanel contentPane;
	private boolean flag1,flag2,flag3;
	private JPasswordField passwordField;
	private JPasswordField passwordField_1;
	private JPasswordField passwordField_2;
	private User user;
	private JLabel lblNewLabel_3,lblNewLabel_4,lblNewLabel_5 ;
	private String oldpwd,newpwd,once;
	private JButton btnNewButton,btnNewButton_1 ;


	/**
	 * Create the frame.
	 */
	public NewPwd(User user) {
		this.user=user;
		setResizable(false);
		setTitle("修改密码");
		setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
		setBounds(100, 100, 450, 300);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));
		setContentPane(contentPane);
		contentPane.setLayout(null);
		
		JLabel lblNewLabel = new JLabel("旧 密 码：");
		lblNewLabel.setBounds(86, 50, 65, 15);
		contentPane.add(lblNewLabel);
		
		JLabel lblNewLabel_1 = new JLabel("新 密 码：");
		lblNewLabel_1.setBounds(86, 100, 65, 15);
		contentPane.add(lblNewLabel_1);
		
		JLabel lblNewLabel_2 = new JLabel("确认密码：");
		lblNewLabel_2.setBounds(86, 150, 65, 15);
		contentPane.add(lblNewLabel_2);
		
		lblNewLabel_3 = new JLabel("");
		lblNewLabel_3.setBounds(291, 50, 132, 15);
		lblNewLabel_3.addFocusListener(new OldPwd());
		contentPane.add(lblNewLabel_3);
		
		lblNewLabel_4 = new JLabel("");
		lblNewLabel_4.setBounds(291, 100, 132, 15);
		contentPane.add(lblNewLabel_4);
		
		lblNewLabel_5 = new JLabel("");
		lblNewLabel_5.setBounds(291, 150, 132, 15);
		contentPane.add(lblNewLabel_5);
		
		btnNewButton = new JButton("确定");
		btnNewButton.setBounds(105, 197, 93, 23);
		btnNewButton.addActionListener(new yes());
		contentPane.add(btnNewButton);
		
		btnNewButton_1 = new JButton("返回");
		btnNewButton_1.setBounds(234, 197, 93, 23);
		btnNewButton_1.addActionListener(new back());
		contentPane.add(btnNewButton_1);
		
		passwordField = new JPasswordField();
		passwordField.setBounds(149, 47, 132, 21);
		passwordField.addFocusListener(new OldPwd());
		contentPane.add(passwordField);
		
		passwordField_1 = new JPasswordField();
		passwordField_1.setBounds(149, 97, 132, 21);
		passwordField_1.addFocusListener(new RePwd());
		contentPane.add(passwordField_1);
		
		passwordField_2 = new JPasswordField();
		passwordField_2.setBounds(149, 147, 132, 21);
		passwordField_2.addFocusListener(new FocusListener() {		
			@Override
			public void focusLost(FocusEvent arg0) {
				once = new String(passwordField_2.getPassword());
				newpwd = new String(passwordField_1.getPassword());
				lblNewLabel_5.setText("");
				if(newpwd.equals(once)){
					flag3=true;
				}else {
					lblNewLabel_5.setText("请好好确认密码");
					lblNewLabel_5.setForeground(Color.red);
					flag3=false;
				}
			}			
			@Override
			public void focusGained(FocusEvent arg0) {
				// TODO Auto-generated method stub				
			}
		});
		contentPane.add(passwordField_2);
	}
	
	public class OldPwd implements FocusListener{

		@Override
		public void focusGained(FocusEvent arg0) {		
		}
		@Override
		public void focusLost(FocusEvent arg0) {
			oldpwd = new String(passwordField.getPassword());
			lblNewLabel_3.setText("");
			if(oldpwd==null||oldpwd.equals("")){
				lblNewLabel_3.setText("×不能留空哦~");
				lblNewLabel_3.setForeground(Color.red);
				flag1=false;
			}else if(user.getUser_pwd().equals(oldpwd)){
				lblNewLabel_3.setText("");
				lblNewLabel_3.setForeground(Color.green);
				flag1=true;
			}else {
				lblNewLabel_3.setText("");
				lblNewLabel_3.setForeground(Color.red);
				flag1=false;
			}
		}		
	}
	
	public class RePwd implements FocusListener{

		@Override
		public void focusGained(FocusEvent arg0) {
		}
		@Override
		public void focusLost(FocusEvent arg0) {
			lblNewLabel_4.setText("");
			oldpwd = new String(passwordField.getPassword());
			newpwd = new String(passwordField_1.getPassword());
			if(newpwd==null||newpwd.equals("")){
				lblNewLabel_4.setText("×新密码不能为空！");
				lblNewLabel_4.setForeground(Color.red);
				flag2=false;
			}else if(newpwd.equals(oldpwd)){
				lblNewLabel_4.setText("×新旧密码不能相同！");
				lblNewLabel_4.setForeground(Color.red);
				flag2=false;
			}else {
				lblNewLabel_4.setText("√新密码可用~");
				lblNewLabel_4.setForeground(Color.green);
				flag2 = true;						
			}
		}
		
		
	}
	
	public class back implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent arg0) {
			NewPwd.this.dispose();
		}
		
	}
	
	public class yes implements ActionListener{

		@Override
		public void actionPerformed(ActionEvent arg0) {
			once = new String(passwordField_2.getPassword());
			newpwd = new String(passwordField_1.getPassword());
			if(newpwd.equals(once)){
				flag3=true;
			}
			if(flag1&&flag2&&flag3){
				newpwd = new String(passwordField_1.getPassword());
				UserBiz biz = new UserBizImpl();
				if(biz.updatePwdById(user.getUser_id(), newpwd)){
				JOptionPane.showMessageDialog(NewPwd.this, "修改成功！");
				user.setUser_pwd(newpwd);
				NewPwd.this.dispose();
				}else {
					JOptionPane.showMessageDialog(NewPwd.this, "修改失败！");
				}
			}else {
				JOptionPane.showMessageDialog(NewPwd.this, "修改失败！");
			}
			
		}
		
	}

}
